{"ast":null,"code":"import * as types from '../actions/types';\nconst initialState = {\n  messages: [],\n  currentMessage: null\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.FETCH_MESSAGES_REQUEST:\n      return {\n        loading: true,\n        messages: []\n      };\n\n    case types.FETCH_MESSAGES_SUCCESS:\n      return { ...state,\n        messages: action.payload,\n        loading: false\n      };\n\n    case types.FETCH_MESSAGES_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case types.FETCH_SINGLE_MESSAGE_REQUEST:\n      return {\n        loading: true,\n        messages: []\n      };\n\n    case types.FETCH_SINGLE_MESSAGE_SUCCESS:\n      return { ...state,\n        currentMessage: action.payload,\n        loading: false\n      };\n\n    case types.FETCH_SINGLE_MESSAGE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case types.CREATE_MESSAGE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case types.CREATE_MESSAGE_SUCCESS:\n      return { ...state,\n        messages: [...state.messages, action.payload],\n        loading: false\n      };\n\n    case types.CREATE_MESSAGE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport { messageReducer };","map":{"version":3,"sources":["E:/RealProjects/Projects Done/ReactTestProject/buzlylabtestproject/client/src/redux/reducers/messages.js"],"names":["types","initialState","messages","currentMessage","messageReducer","state","action","type","FETCH_MESSAGES_REQUEST","loading","FETCH_MESSAGES_SUCCESS","payload","FETCH_MESSAGES_FAIL","error","FETCH_SINGLE_MESSAGE_REQUEST","FETCH_SINGLE_MESSAGE_SUCCESS","FETCH_SINGLE_MESSAGE_FAIL","CREATE_MESSAGE_REQUEST","CREATE_MESSAGE_SUCCESS","CREATE_MESSAGE_FAIL"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAKA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,sBAAX;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELP,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKF,KAAK,CAACU,sBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACK,OAFZ;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,KAAK,CAACY,mBAAX;AACE,aAAO;AACLH,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEP,MAAM,CAACK;AAFT,OAAP;;AAKF,SAAKX,KAAK,CAACc,4BAAX;AACE,aAAO;AACLL,QAAAA,OAAO,EAAE,IADJ;AAELP,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKF,KAAK,CAACe,4BAAX;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,cAAc,EAAEG,MAAM,CAACK,OAFlB;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,KAAK,CAACgB,yBAAX;AACE,aAAO;AACLP,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEP,MAAM,CAACK;AAFT,OAAP;;AAKF,SAAKX,KAAK,CAACiB,sBAAX;AACE,aAAO,EACL,GAAGZ,KADE;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKT,KAAK,CAACkB,sBAAX;AACE,aAAO,EACL,GAAGb,KADE;AAELH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACK,OAA3B,CAFL;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,KAAK,CAACmB,mBAAX;AACE,aAAO;AACLV,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEP,MAAM,CAACK;AAFT,OAAP;;AAKF;AACE,aAAO,EACL,GAAGN;AADE,OAAP;AArDJ;AAyDD,CA1DD;;AA4DA,SAASD,cAAT","sourcesContent":["import * as types from '../actions/types';\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  currentMessage: null,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_MESSAGES_REQUEST:\r\n      return {\r\n        loading: true,\r\n        messages: [],\r\n      };\r\n    case types.FETCH_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: action.payload,\r\n        loading: false,\r\n      };\r\n    case types.FETCH_MESSAGES_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case types.FETCH_SINGLE_MESSAGE_REQUEST:\r\n      return {\r\n        loading: true,\r\n        messages: [],\r\n      };\r\n    case types.FETCH_SINGLE_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentMessage: action.payload,\r\n        loading: false,\r\n      };\r\n    case types.FETCH_SINGLE_MESSAGE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case types.CREATE_MESSAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.CREATE_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n        loading: false,\r\n      };\r\n    case types.CREATE_MESSAGE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport { messageReducer };\r\n"]},"metadata":{},"sourceType":"module"}